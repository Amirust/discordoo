{
	"id": 0,
	"name": "discordoo",
	"kind": 0,
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 1,
			"name": "cache",
			"kind": 1,
			"kindString": "Module",
			"flags": {}
		},
		{
			"id": 2,
			"name": "collection",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3,
					"name": "Collection",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "An utility data structure used within the library"
					},
					"children": [
						{
							"id": 5,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 6,
									"name": "new Collection",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 7,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										},
										{
											"id": 8,
											"name": "V",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 9,
											"name": "entries",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "typeOperator",
														"operator": "readonly",
														"target": {
															"type": "array",
															"elementType": {
																"type": "typeOperator",
																"operator": "readonly",
																"target": {
																	"type": "tuple",
																	"elements": [
																		{
																			"type": "reference",
																			"name": "K"
																		},
																		{
																			"type": "reference",
																			"name": "V"
																		}
																	]
																}
															}
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3,
										"typeArguments": [
											{
												"type": "reference",
												"name": "K"
											},
											{
												"type": "reference",
												"name": "V"
											}
										],
										"name": "Collection"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Map<K, V>.constructor"
									}
								},
								{
									"id": 10,
									"name": "new Collection",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 11,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										},
										{
											"id": 12,
											"name": "V",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 13,
											"name": "iterable",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "typeOperator",
														"operator": "readonly",
														"target": {
															"type": "tuple",
															"elements": [
																{
																	"type": "reference",
																	"name": "K"
																},
																{
																	"type": "reference",
																	"name": "V"
																}
															]
														}
													}
												],
												"name": "Iterable"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3,
										"typeArguments": [
											{
												"type": "reference",
												"name": "K"
											},
											{
												"type": "reference",
												"name": "V"
											}
										],
										"name": "Collection"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Map<K, V>.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Map<K, V>.constructor"
							}
						},
						{
							"id": 4,
							"name": "[Symbol.species]",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
									"line": 317,
									"character": 29
								}
							],
							"type": {
								"type": "reference",
								"name": "MapConstructor"
							}
						},
						{
							"id": 63,
							"name": "[Symbol.toStringTag]",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
									"line": 135,
									"character": 33
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Map.__@toStringTag"
							}
						},
						{
							"id": 54,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.collection.d.ts",
									"line": 28,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Map.size"
							}
						},
						{
							"id": 55,
							"name": "[Symbol.iterator]",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 56,
									"name": "[Symbol.iterator]",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns an iterable of entries in the map."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "reference",
														"name": "K"
													},
													{
														"type": "reference",
														"name": "V"
													}
												]
											}
										],
										"name": "IterableIterator"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Map.__@iterator"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Map.__@iterator"
							}
						},
						{
							"id": 30,
							"name": "clear",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 31,
									"name": "clear",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Map.clear"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Map.clear"
							}
						},
						{
							"id": 25,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/collection/index.ts",
									"line": 43,
									"character": 7
								}
							],
							"signatures": [
								{
									"id": 26,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create a new collection based on this one"
									},
									"type": {
										"type": "reference",
										"id": 3,
										"typeArguments": [
											{
												"type": "reference",
												"name": "K"
											},
											{
												"type": "reference",
												"name": "V"
											}
										],
										"name": "Collection"
									}
								}
							]
						},
						{
							"id": 32,
							"name": "delete",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 33,
									"name": "delete",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 34,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "K"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Map.delete"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Map.delete"
							}
						},
						{
							"id": 57,
							"name": "entries",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 58,
									"name": "entries",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns an iterable of key, value pairs for every entry in the map."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "reference",
														"name": "K"
													},
													{
														"type": "reference",
														"name": "V"
													}
												]
											}
										],
										"name": "IterableIterator"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Map.entries"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Map.entries"
							}
						},
						{
							"id": 27,
							"name": "equal",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/collection/index.ts",
									"line": 52,
									"character": 7
								}
							],
							"signatures": [
								{
									"id": 28,
									"name": "equal",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Check if two collections are equal"
									},
									"parameters": [
										{
											"id": 29,
											"name": "collection",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "collection to compare to\n"
											},
											"type": {
												"type": "reference",
												"id": 3,
												"typeArguments": [
													{
														"type": "reference",
														"name": "K"
													},
													{
														"type": "reference",
														"name": "V"
													}
												],
												"name": "Collection"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 17,
							"name": "filter",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/collection/index.ts",
									"line": 34,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 18,
									"name": "filter",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Throw away the elements which dont meet requirements"
									},
									"parameters": [
										{
											"id": 19,
											"name": "filter",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "function which filters\n"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 20,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 21,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 22,
																	"name": "value",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "V"
																	}
																},
																{
																	"id": 23,
																	"name": "key",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "K"
																	}
																},
																{
																	"id": 24,
																	"name": "collection",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"id": 3,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "K"
																			},
																			{
																				"type": "reference",
																				"name": "V"
																			}
																		],
																		"name": "Collection"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3,
										"typeArguments": [
											{
												"type": "reference",
												"name": "K"
											},
											{
												"type": "reference",
												"name": "V"
											}
										],
										"name": "Collection"
									}
								}
							]
						},
						{
							"id": 35,
							"name": "forEach",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 36,
									"name": "forEach",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 37,
											"name": "callbackfn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 38,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 39,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 40,
																	"name": "value",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "V"
																	}
																},
																{
																	"id": 41,
																	"name": "key",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "K"
																	}
																},
																{
																	"id": 42,
																	"name": "map",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "K"
																			},
																			{
																				"type": "reference",
																				"name": "V"
																			}
																		],
																		"name": "Map"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										},
										{
											"id": 43,
											"name": "thisArg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Map.forEach"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Map.forEach"
							}
						},
						{
							"id": 44,
							"name": "get",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 45,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 46,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "K"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "V"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Map.get"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Map.get"
							}
						},
						{
							"id": 47,
							"name": "has",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 48,
									"name": "has",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 49,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "K"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Map.has"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Map.has"
							}
						},
						{
							"id": 59,
							"name": "keys",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 60,
									"name": "keys",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns an iterable of keys in the map"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "K"
											}
										],
										"name": "IterableIterator"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Map.keys"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Map.keys"
							}
						},
						{
							"id": 14,
							"name": "random",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/collection/index.ts",
									"line": 12,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 15,
									"name": "random",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get a random element from collection"
									},
									"parameters": [
										{
											"id": 16,
											"name": "amount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "amount of elements to be retrieved\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "V"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "V"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 50,
							"name": "set",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 51,
									"name": "set",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 52,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "K"
											}
										},
										{
											"id": 53,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "V"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3,
										"typeArguments": [
											{
												"type": "reference",
												"name": "K"
											},
											{
												"type": "reference",
												"name": "V"
											}
										],
										"name": "Collection"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Map.set"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Map.set"
							}
						},
						{
							"id": 61,
							"name": "values",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 62,
									"name": "values",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns an iterable of values in the map"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "V"
											}
										],
										"name": "IterableIterator"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Map.values"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Map.values"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								5
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4,
								63,
								54
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								55,
								30,
								25,
								32,
								57,
								27,
								17,
								35,
								44,
								47,
								59,
								14,
								50,
								61
							]
						}
					],
					"sources": [
						{
							"fileName": "src/collection/index.ts",
							"line": 6,
							"character": 23
						}
					],
					"typeParameter": [
						{
							"id": 64,
							"name": "K",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 65,
							"name": "V",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "K"
								},
								{
									"type": "reference",
									"name": "V"
								}
							],
							"name": "Map"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3
					]
				}
			],
			"sources": [
				{
					"fileName": "src/collection/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 66,
			"name": "core",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 77,
					"name": "Client",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Entry point for all of Discordoo. Manages modules and events"
					},
					"children": [
						{
							"id": 79,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 80,
									"name": "new Client",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 81,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 77,
										"name": "default"
									},
									"overwrites": {
										"type": "reference",
										"name": "TypedEmitter<ClientEventHandlers>.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "TypedEmitter<ClientEventHandlers>.constructor"
							}
						},
						{
							"id": 83,
							"name": "modules",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Module manager of this client"
							},
							"sources": [
								{
									"fileName": "src/core/Client.ts",
									"line": 18,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 176,
								"name": "default"
							},
							"defaultValue": "..."
						},
						{
							"id": 84,
							"name": "rest",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "RESTProvider used by this module"
							},
							"sources": [
								{
									"fileName": "src/core/Client.ts",
									"line": 21,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 226,
										"name": "RESTProvider"
									}
								]
							},
							"defaultValue": "null"
						},
						{
							"id": 82,
							"name": "token",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Token used by this client"
							},
							"sources": [
								{
									"fileName": "src/core/Client.ts",
									"line": 10,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 78,
							"name": "defaultMaxListeners",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/tiny-typed-emitter/lib/index.d.ts",
									"line": 10,
									"character": 30
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TypedEmitter.defaultMaxListeners"
							}
						},
						{
							"id": 100,
							"name": "addListener",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/tiny-typed-emitter/lib/index.d.ts",
									"line": 11,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 101,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"typeParameter": [
										{
											"id": 102,
											"name": "U",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "ready"
											}
										}
									],
									"parameters": [
										{
											"id": 103,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "U"
											}
										},
										{
											"id": 104,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"name": "U"
												},
												"objectType": {
													"type": "reference",
													"id": 162,
													"name": "default"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 77,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "TypedEmitter.addListener"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "TypedEmitter.addListener"
							}
						},
						{
							"id": 138,
							"name": "emit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/tiny-typed-emitter/lib/index.d.ts",
									"line": 19,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 139,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"typeParameter": [
										{
											"id": 140,
											"name": "U",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "ready"
											}
										}
									],
									"parameters": [
										{
											"id": 141,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "U"
											}
										},
										{
											"id": 142,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isRest": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"name": "U"
														},
														"objectType": {
															"type": "reference",
															"id": 162,
															"name": "default"
														}
													}
												],
												"name": "Parameters"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "TypedEmitter.emit"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "TypedEmitter.emit"
							}
						},
						{
							"id": 143,
							"name": "eventNames",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/tiny-typed-emitter/lib/index.d.ts",
									"line": 20,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 144,
									"name": "eventNames",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"typeParameter": [
										{
											"id": 145,
											"name": "U",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "ready"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "U"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "TypedEmitter.eventNames"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "TypedEmitter.eventNames"
							}
						},
						{
							"id": 157,
							"name": "getMaxListeners",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/tiny-typed-emitter/lib/index.d.ts",
									"line": 24,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 158,
									"name": "getMaxListeners",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "TypedEmitter.getMaxListeners"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "TypedEmitter.getMaxListeners"
							}
						},
						{
							"id": 146,
							"name": "listenerCount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/tiny-typed-emitter/lib/index.d.ts",
									"line": 21,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 147,
									"name": "listenerCount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 148,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "ready"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "TypedEmitter.listenerCount"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "TypedEmitter.listenerCount"
							}
						},
						{
							"id": 149,
							"name": "listeners",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/tiny-typed-emitter/lib/index.d.ts",
									"line": 22,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 150,
									"name": "listeners",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"typeParameter": [
										{
											"id": 151,
											"name": "U",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "ready"
											}
										}
									],
									"parameters": [
										{
											"id": 152,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "U"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"name": "U"
											},
											"objectType": {
												"type": "reference",
												"id": 162,
												"name": "default"
											}
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "TypedEmitter.listeners"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "TypedEmitter.listeners"
							}
						},
						{
							"id": 85,
							"name": "m",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/Client.ts",
									"line": 28,
									"character": 3
								}
							],
							"signatures": [
								{
									"id": 86,
									"name": "m",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get a module. Alias for module(id)."
									},
									"parameters": [
										{
											"id": 87,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "module id\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 166,
												"name": "default"
											}
										]
									}
								}
							]
						},
						{
							"id": 88,
							"name": "module",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/Client.ts",
									"line": 37,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 89,
									"name": "module",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get a module"
									},
									"parameters": [
										{
											"id": 90,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "module id\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 166,
												"name": "default"
											}
										]
									}
								}
							]
						},
						{
							"id": 133,
							"name": "off",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/tiny-typed-emitter/lib/index.d.ts",
									"line": 18,
									"character": 7
								}
							],
							"signatures": [
								{
									"id": 134,
									"name": "off",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"typeParameter": [
										{
											"id": 135,
											"name": "U",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "ready"
											}
										}
									],
									"parameters": [
										{
											"id": 136,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "U"
											}
										},
										{
											"id": 137,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"name": "U"
												},
												"objectType": {
													"type": "reference",
													"id": 162,
													"name": "default"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 77,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "TypedEmitter.off"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "TypedEmitter.off"
							}
						},
						{
							"id": 128,
							"name": "on",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/tiny-typed-emitter/lib/index.d.ts",
									"line": 17,
									"character": 6
								}
							],
							"signatures": [
								{
									"id": 129,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"typeParameter": [
										{
											"id": 130,
											"name": "U",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "ready"
											}
										}
									],
									"parameters": [
										{
											"id": 131,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "U"
											}
										},
										{
											"id": 132,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"name": "U"
												},
												"objectType": {
													"type": "reference",
													"id": 162,
													"name": "default"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 77,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "TypedEmitter.on"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "TypedEmitter.on"
							}
						},
						{
							"id": 123,
							"name": "once",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/tiny-typed-emitter/lib/index.d.ts",
									"line": 16,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 124,
									"name": "once",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"typeParameter": [
										{
											"id": 125,
											"name": "U",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "ready"
											}
										}
									],
									"parameters": [
										{
											"id": 126,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "U"
											}
										},
										{
											"id": 127,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"name": "U"
												},
												"objectType": {
													"type": "reference",
													"id": 162,
													"name": "default"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 77,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "TypedEmitter.once"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "TypedEmitter.once"
							}
						},
						{
							"id": 105,
							"name": "prependListener",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/tiny-typed-emitter/lib/index.d.ts",
									"line": 12,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 106,
									"name": "prependListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"typeParameter": [
										{
											"id": 107,
											"name": "U",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "ready"
											}
										}
									],
									"parameters": [
										{
											"id": 108,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "U"
											}
										},
										{
											"id": 109,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"name": "U"
												},
												"objectType": {
													"type": "reference",
													"id": 162,
													"name": "default"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 77,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "TypedEmitter.prependListener"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "TypedEmitter.prependListener"
							}
						},
						{
							"id": 110,
							"name": "prependOnceListener",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/tiny-typed-emitter/lib/index.d.ts",
									"line": 13,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 111,
									"name": "prependOnceListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"typeParameter": [
										{
											"id": 112,
											"name": "U",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "ready"
											}
										}
									],
									"parameters": [
										{
											"id": 113,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "U"
											}
										},
										{
											"id": 114,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"name": "U"
												},
												"objectType": {
													"type": "reference",
													"id": 162,
													"name": "default"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 77,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "TypedEmitter.prependOnceListener"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "TypedEmitter.prependOnceListener"
							}
						},
						{
							"id": 153,
							"name": "rawListeners",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/tiny-typed-emitter/lib/index.d.ts",
									"line": 23,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 154,
									"name": "rawListeners",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"typeParameter": [
										{
											"id": 155,
											"name": "U",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "ready"
											}
										}
									],
									"parameters": [
										{
											"id": 156,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "U"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"name": "U"
											},
											"objectType": {
												"type": "reference",
												"id": 162,
												"name": "default"
											}
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "TypedEmitter.rawListeners"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "TypedEmitter.rawListeners"
							}
						},
						{
							"id": 120,
							"name": "removeAllListeners",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/tiny-typed-emitter/lib/index.d.ts",
									"line": 15,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 121,
									"name": "removeAllListeners",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 122,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "literal",
												"value": "ready"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 77,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "TypedEmitter.removeAllListeners"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "TypedEmitter.removeAllListeners"
							}
						},
						{
							"id": 115,
							"name": "removeListener",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/tiny-typed-emitter/lib/index.d.ts",
									"line": 14,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 116,
									"name": "removeListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"typeParameter": [
										{
											"id": 117,
											"name": "U",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "ready"
											}
										}
									],
									"parameters": [
										{
											"id": 118,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "U"
											}
										},
										{
											"id": 119,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"name": "U"
												},
												"objectType": {
													"type": "reference",
													"id": 162,
													"name": "default"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 77,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "TypedEmitter.removeListener"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "TypedEmitter.removeListener"
							}
						},
						{
							"id": 159,
							"name": "setMaxListeners",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/tiny-typed-emitter/lib/index.d.ts",
									"line": 25,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 160,
									"name": "setMaxListeners",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 161,
											"name": "n",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 77,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "TypedEmitter.setMaxListeners"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "TypedEmitter.setMaxListeners"
							}
						},
						{
							"id": 91,
							"name": "use",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/Client.ts",
									"line": 46,
									"character": 5
								}
							],
							"signatures": [
								{
									"id": 92,
									"name": "use",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create a new module load group"
									},
									"parameters": [
										{
											"id": 93,
											"name": "modules",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"comment": {
												"text": "modules in the group\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 166,
													"name": "default"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 94,
							"name": "useRESTProvider",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/Client.ts",
									"line": 57,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 95,
									"name": "useRESTProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Set the {@link RESTProvider} to be used by this client",
										"text": "Bounds it's context to {@link Client}\n"
									},
									"parameters": [
										{
											"id": 96,
											"name": "provider",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "function, that returns desired RESTProvider\n"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 97,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 98,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 99,
																	"name": "client",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"id": 77,
																		"name": "default"
																	}
																}
															],
															"type": {
																"type": "reference",
																"id": 226,
																"name": "RESTProvider"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								79
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								83,
								84,
								82,
								78
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								100,
								138,
								143,
								157,
								146,
								149,
								85,
								88,
								133,
								128,
								123,
								105,
								110,
								153,
								120,
								115,
								159,
								91,
								94
							]
						}
					],
					"sources": [
						{
							"fileName": "src/core/Client.ts",
							"line": 8,
							"character": 27
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 162,
									"name": "ClientEventHandlers"
								}
							],
							"name": "TypedEmitter"
						}
					]
				},
				{
					"id": 229,
					"name": "Constants",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 231,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 232,
									"name": "new Constants",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 229,
										"name": "default"
									}
								}
							]
						},
						{
							"id": 230,
							"name": "API_ENDPOINT",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "src/core/Constants.ts",
									"line": 2,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'https://discord.com/api'"
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								231
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								230
							]
						}
					],
					"sources": [
						{
							"fileName": "src/core/Constants.ts",
							"line": 1,
							"character": 30
						}
					]
				},
				{
					"id": 176,
					"name": "ModuleManager",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Module manager for Client",
						"text": "Manages module loadment and their \"injection\"\n"
					},
					"children": [
						{
							"id": 177,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 178,
									"name": "new ModuleManager",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 179,
											"name": "client",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "client, into which modules will be loaded\n"
											},
											"type": {
												"type": "reference",
												"id": 77,
												"name": "default"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 176,
										"name": "default"
									}
								}
							]
						},
						{
							"id": 181,
							"name": "_moduleLoadGroups",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"shortText": "Array of load groups"
							},
							"sources": [
								{
									"fileName": "src/core/modules/ModuleManager.ts",
									"line": 21,
									"character": 27
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"id": 166,
										"name": "default"
									}
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 182,
							"name": "client",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Client which uses this manager"
							},
							"sources": [
								{
									"fileName": "src/core/modules/ModuleManager.ts",
									"line": 26,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 77,
								"name": "default"
							}
						},
						{
							"id": 180,
							"name": "modules",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Modules loaded by this manager"
							},
							"sources": [
								{
									"fileName": "src/core/modules/ModuleManager.ts",
									"line": 14,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 3,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									},
									{
										"type": "reference",
										"id": 166,
										"name": "default"
									}
								],
								"name": "Collection"
							},
							"defaultValue": "..."
						},
						{
							"id": 183,
							"name": "createLoadGroup",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/modules/ModuleManager.ts",
									"line": 44,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 184,
									"name": "createLoadGroup",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a new load group",
										"text": "Load group is a bunch of modules, which will be loaded together sequentially.\nGroups can be either loaded in parallel or sequentially\n"
									},
									"parameters": [
										{
											"id": 185,
											"name": "modules",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"comment": {
												"text": "modules to add to a new load group\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 166,
													"name": "default"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 192,
							"name": "getModule",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/modules/ModuleManager.ts",
									"line": 89,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 193,
									"name": "getModule",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Retrieve a module"
									},
									"parameters": [
										{
											"id": 194,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "module's id\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 166,
												"name": "default"
											}
										]
									}
								}
							]
						},
						{
							"id": 189,
							"name": "init",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/modules/ModuleManager.ts",
									"line": 62,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 190,
									"name": "init",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Initialize all modules"
									},
									"parameters": [
										{
											"id": 191,
											"name": "async",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "determines if load groups shall be loaded in parallel\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "false"
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 186,
							"name": "use",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/modules/ModuleManager.ts",
									"line": 53,
									"character": 5
								}
							],
							"signatures": [
								{
									"id": 187,
									"name": "use",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "An alias to ModuleManager#createLoadGroup"
									},
									"parameters": [
										{
											"id": 188,
											"name": "modules",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"comment": {
												"text": "modules to add to a new load group\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 166,
													"name": "default"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								177
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								181,
								182,
								180
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								183,
								192,
								189,
								186
							]
						}
					],
					"sources": [
						{
							"fileName": "src/core/modules/ModuleManager.ts",
							"line": 10,
							"character": 34
						}
					]
				},
				{
					"id": 162,
					"name": "ClientEventHandlers",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Client events"
					},
					"children": [
						{
							"id": 163,
							"name": "ready",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Emitted once the client is ready"
							},
							"sources": [
								{
									"fileName": "src/core/ClientEventHandlers.ts",
									"line": 8,
									"character": 7
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 164,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 165,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								163
							]
						}
					],
					"sources": [
						{
							"fileName": "src/core/ClientEventHandlers.ts",
							"line": 4,
							"character": 44
						}
					]
				},
				{
					"id": 166,
					"name": "Module",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Represents a module",
						"text": "Not meant to be used by regular users, just for library's and third-party developers\n"
					},
					"children": [
						{
							"id": 172,
							"name": "destroyed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Function, which will be emitted once module is destroyed"
							},
							"sources": [
								{
									"fileName": "src/core/modules/Module.ts",
									"line": 21,
									"character": 11
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 173,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 174,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Promise"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 175,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Unique id for this module."
							},
							"sources": [
								{
									"fileName": "src/core/modules/Module.ts",
									"line": 25,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "symbol"
									}
								]
							}
						},
						{
							"id": 168,
							"name": "init",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Function, which will be emitted once module was initialized on client's startup",
								"tags": [
									{
										"tag": "param",
										"text": "\n",
										"param": "client"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/core/modules/Module.ts",
									"line": 17,
									"character": 6
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 169,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 170,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 171,
													"name": "client",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 77,
														"name": "default"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Promise"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 167,
							"name": "initialized",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Whether the module was initialized"
							},
							"sources": [
								{
									"fileName": "src/core/modules/Module.ts",
									"line": 12,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								172,
								175,
								168,
								167
							]
						}
					],
					"sources": [
						{
							"fileName": "src/core/modules/Module.ts",
							"line": 8,
							"character": 31
						}
					]
				},
				{
					"id": 233,
					"name": "RESTResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 234,
							"name": "body",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/providers/rest/RESTResponse.ts",
									"line": 2,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "T"
							}
						},
						{
							"id": 236,
							"name": "headers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/providers/rest/RESTResponse.ts",
									"line": 4,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record"
							}
						},
						{
							"id": 235,
							"name": "statusCode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/providers/rest/RESTResponse.ts",
									"line": 3,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								234,
								236,
								235
							]
						}
					],
					"sources": [
						{
							"fileName": "src/core/providers/rest/RESTResponse.ts",
							"line": 1,
							"character": 37
						}
					],
					"typeParameter": [
						{
							"id": 237,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					]
				},
				{
					"id": 195,
					"name": "RequestBuilder",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 211,
							"name": "delete",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 212,
									"name": "delete",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 213,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 214,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 223,
												"name": "default"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 233,
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "default"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 203,
							"name": "get",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 204,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 205,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 206,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 223,
												"name": "default"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 233,
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "default"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 219,
							"name": "patch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 220,
									"name": "patch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 221,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 222,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 223,
												"name": "default"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 233,
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "default"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 207,
							"name": "post",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 208,
									"name": "post",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 209,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 210,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 223,
												"name": "default"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 233,
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "default"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 215,
							"name": "put",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 216,
									"name": "put",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 217,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 218,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 223,
												"name": "default"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 233,
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "default"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 199,
							"name": "query",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 200,
									"name": "query",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 201,
											"name": "k",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 202,
											"name": "v",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 195,
										"name": "default"
									}
								}
							]
						},
						{
							"id": 196,
							"name": "url",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 197,
									"name": "url",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 198,
											"name": "paths",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 195,
										"name": "default"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								211,
								203,
								219,
								207,
								215,
								199,
								196
							]
						}
					],
					"sources": [
						{
							"fileName": "src/core/providers/rest/RequestBuilder.ts",
							"line": 4,
							"character": 39
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"id": 257,
							"name": "RESTRequestBuilder"
						}
					]
				},
				{
					"id": 223,
					"name": "RequestOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 225,
							"name": "body",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/core/providers/rest/RequestOptions.ts",
									"line": 3,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Record"
							}
						},
						{
							"id": 224,
							"name": "headers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/core/providers/rest/RequestOptions.ts",
									"line": 2,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Record"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								225,
								224
							]
						}
					],
					"sources": [
						{
							"fileName": "src/core/providers/rest/RequestOptions.ts",
							"line": 1,
							"character": 39
						}
					]
				},
				{
					"id": 226,
					"name": "RESTProvider",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Represents a RESTProvider. Bound to Client context."
					},
					"sources": [
						{
							"fileName": "src/core/providers/rest/RESTProvider.ts",
							"line": 6,
							"character": 17
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 227,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/providers/rest/RESTProvider.ts",
									"line": 6,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 228,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 195,
												"name": "RequestBuilder"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 195,
														"name": "RequestBuilder"
													}
												],
												"name": "Promise"
											}
										]
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						77,
						229,
						176
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						162,
						166,
						233,
						195,
						223
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						226
					]
				}
			],
			"sources": [
				{
					"fileName": "src/core/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 67,
			"name": "main",
			"kind": 1,
			"kindString": "Module",
			"flags": {}
		},
		{
			"id": 68,
			"name": "rest",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 257,
					"name": "RESTRequestBuilder",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Create requests to Discord",
						"tags": [
							{
								"tag": "internal",
								"text": "\n"
							}
						]
					},
					"children": [
						{
							"id": 258,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 259,
									"name": "new RESTRequestBuilder",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 260,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 261,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 243,
												"name": "default"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 257,
										"name": "default"
									}
								}
							]
						},
						{
							"id": 266,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "src/rest/RESTRequestBuilder.ts",
									"line": 18,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"id": 243,
								"name": "default"
							}
						},
						{
							"id": 263,
							"name": "queryStack",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "src/rest/RESTRequestBuilder.ts",
									"line": 13,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Record"
							},
							"defaultValue": "..."
						},
						{
							"id": 264,
							"name": "retries",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "src/rest/RESTRequestBuilder.ts",
									"line": 14,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						},
						{
							"id": 262,
							"name": "stack",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "src/rest/RESTRequestBuilder.ts",
									"line": 12,
									"character": 15
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 265,
							"name": "token",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Token of this request"
							},
							"sources": [
								{
									"fileName": "src/rest/RESTRequestBuilder.ts",
									"line": 17,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 281,
							"name": "endpoint",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "src/rest/RESTRequestBuilder.ts",
									"line": 46,
									"character": 14
								}
							],
							"getSignature": [
								{
									"id": 282,
									"name": "endpoint",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 304,
							"name": "delete",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/rest/RESTRequestBuilder.ts",
									"line": 107,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 305,
									"name": "delete",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 306,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 307,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 223,
												"name": "default"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 233,
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "default"
											}
										],
										"name": "Promise"
									},
									"implementationOf": {
										"type": "reference",
										"id": 212,
										"name": "RequestBuilder.delete"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 211,
								"name": "RequestBuilder.delete"
							}
						},
						{
							"id": 288,
							"name": "get",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/rest/RESTRequestBuilder.ts",
									"line": 91,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 289,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 290,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 291,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 223,
														"name": "default"
													},
													{
														"type": "literal",
														"value": "body"
													}
												],
												"name": "Omit"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 233,
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "default"
											}
										],
										"name": "Promise"
									},
									"implementationOf": {
										"type": "reference",
										"id": 204,
										"name": "RequestBuilder.get"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 203,
								"name": "RequestBuilder.get"
							}
						},
						{
							"id": 267,
							"name": "getHeaders",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "src/rest/RESTRequestBuilder.ts",
									"line": 27,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 268,
									"name": "getHeaders",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 269,
											"name": "headers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record"
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 270,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 272,
													"name": "Authorization",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "..."
												},
												{
													"id": 273,
													"name": "Content-Type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'application/json'"
												},
												{
													"id": 271,
													"name": "User-Agent",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														272,
														273,
														271
													]
												}
											]
										}
									}
								}
							]
						},
						{
							"id": 296,
							"name": "patch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/rest/RESTRequestBuilder.ts",
									"line": 99,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 297,
									"name": "patch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 298,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 299,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 223,
												"name": "default"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 233,
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "default"
											}
										],
										"name": "Promise"
									},
									"implementationOf": {
										"type": "reference",
										"id": 220,
										"name": "RequestBuilder.patch"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 219,
								"name": "RequestBuilder.patch"
							}
						},
						{
							"id": 292,
							"name": "post",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/rest/RESTRequestBuilder.ts",
									"line": 95,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 293,
									"name": "post",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 294,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 295,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 223,
												"name": "default"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 233,
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "default"
											}
										],
										"name": "Promise"
									},
									"implementationOf": {
										"type": "reference",
										"id": 208,
										"name": "RequestBuilder.post"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 207,
								"name": "RequestBuilder.post"
							}
						},
						{
							"id": 300,
							"name": "put",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/rest/RESTRequestBuilder.ts",
									"line": 103,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 301,
									"name": "put",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 302,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 303,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 223,
												"name": "default"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 233,
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "default"
											}
										],
										"name": "Promise"
									},
									"implementationOf": {
										"type": "reference",
										"id": 216,
										"name": "RequestBuilder.put"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 215,
								"name": "RequestBuilder.put"
							}
						},
						{
							"id": 274,
							"name": "query",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/rest/RESTRequestBuilder.ts",
									"line": 36,
									"character": 7
								}
							],
							"signatures": [
								{
									"id": 275,
									"name": "query",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 276,
											"name": "k",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 277,
											"name": "v",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 195,
										"name": "default"
									},
									"implementationOf": {
										"type": "reference",
										"id": 200,
										"name": "RequestBuilder.query"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 199,
								"name": "RequestBuilder.query"
							}
						},
						{
							"id": 283,
							"name": "request",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/rest/RESTRequestBuilder.ts",
									"line": 54,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 284,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 285,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 286,
											"name": "method",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "GET"
													},
													{
														"type": "literal",
														"value": "POST"
													},
													{
														"type": "literal",
														"value": "PUT"
													},
													{
														"type": "literal",
														"value": "PATCH"
													},
													{
														"type": "literal",
														"value": "DELETE"
													}
												]
											}
										},
										{
											"id": 287,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 223,
												"name": "default"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 233,
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "default"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 278,
							"name": "url",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/rest/RESTRequestBuilder.ts",
									"line": 41,
									"character": 5
								}
							],
							"signatures": [
								{
									"id": 279,
									"name": "url",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 280,
											"name": "paths",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 195,
										"name": "default"
									},
									"implementationOf": {
										"type": "reference",
										"id": 197,
										"name": "RequestBuilder.url"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 196,
								"name": "RequestBuilder.url"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								258
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								266,
								263,
								264,
								262,
								265
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								281
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								304,
								288,
								267,
								296,
								292,
								300,
								274,
								283,
								278
							]
						}
					],
					"sources": [
						{
							"fileName": "src/rest/RESTRequestBuilder.ts",
							"line": 11,
							"character": 39
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 195,
							"name": "RequestBuilder"
						}
					]
				},
				{
					"id": 247,
					"name": "RestProviderBuilder",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 248,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 249,
									"name": "new RestProviderBuilder",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 250,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 243,
												"name": "default"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"id": 247,
										"name": "default"
									}
								}
							]
						},
						{
							"id": 251,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/rest/RestProviderBuilder.ts",
									"line": 7,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 243,
								"name": "default"
							}
						},
						{
							"id": 252,
							"name": "getRestProvider",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/rest/RestProviderBuilder.ts",
									"line": 19,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 253,
									"name": "getRestProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 254,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 255,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 256,
															"name": "client",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 77,
																"name": "default"
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 226,
														"name": "RESTProvider"
													}
												}
											]
										}
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								248
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								251
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								252
							]
						}
					],
					"sources": [
						{
							"fileName": "src/rest/RestProviderBuilder.ts",
							"line": 6,
							"character": 40
						}
					]
				},
				{
					"id": 238,
					"name": "Bucket",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 242,
							"name": "global",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/rest/Bucket.ts",
									"line": 5,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 239,
							"name": "limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/rest/Bucket.ts",
									"line": 2,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 240,
							"name": "remaining",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/rest/Bucket.ts",
									"line": 3,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 241,
							"name": "reset",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/rest/Bucket.ts",
									"line": 4,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								242,
								239,
								240,
								241
							]
						}
					],
					"sources": [
						{
							"fileName": "src/rest/Bucket.ts",
							"line": 1,
							"character": 31
						}
					]
				},
				{
					"id": 243,
					"name": "RESTOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 246,
							"name": "maxRetries",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Times, REST will try to perform the request with 5xx error code"
							},
							"sources": [
								{
									"fileName": "src/rest/RESTOptions.ts",
									"line": 11,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 245,
							"name": "useragent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "UserAgent to use",
								"text": "Shouldn't be used, since Discord requires it to contain library name and it's version\n"
							},
							"sources": [
								{
									"fileName": "src/rest/RESTOptions.ts",
									"line": 9,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 244,
							"name": "v",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "API version to use"
							},
							"sources": [
								{
									"fileName": "src/rest/RESTOptions.ts",
									"line": 3,
									"character": 3
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": 6
									},
									{
										"type": "literal",
										"value": 8
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								246,
								245,
								244
							]
						}
					],
					"sources": [
						{
							"fileName": "src/rest/RESTOptions.ts",
							"line": 1,
							"character": 36
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						257,
						247
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						238,
						243
					]
				}
			],
			"sources": [
				{
					"fileName": "src/rest/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 69,
			"name": "util",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 70,
					"name": "default",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 71,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 72,
									"name": "idToDate",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 73,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 74,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 75,
															"name": "id",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "Date"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										72
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						70
					]
				}
			],
			"sources": [
				{
					"fileName": "src/util/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 76,
			"name": "ws",
			"kind": 1,
			"kindString": "Module",
			"flags": {}
		}
	],
	"groups": [
		{
			"title": "Modules",
			"kind": 1,
			"children": [
				1,
				2,
				66,
				67,
				68,
				69,
				76
			]
		}
	]
}