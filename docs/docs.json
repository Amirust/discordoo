{
	"id": 0,
	"name": "discordoo",
	"kind": 0,
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 1,
			"name": "cache",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 51,
					"name": "CacheManager",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Represents a cache manager",
						"text": "Used for cache namespaces fetching\n"
					},
					"children": [
						{
							"id": 52,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 53,
									"name": "new CacheManager",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 51,
										"name": "default"
									}
								}
							]
						},
						{
							"id": 54,
							"name": "caches",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Namespaces controlled by this manager"
							},
							"sources": [
								{
									"fileName": "src/cache/CacheManager.ts",
									"line": 11,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 3,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 67,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "default"
									}
								],
								"name": "Collection"
							},
							"defaultValue": "..."
						},
						{
							"id": 55,
							"name": "getCache",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/cache/CacheManager.ts",
									"line": 17,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 56,
									"name": "getCache",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get a cache namespace"
									},
									"parameters": [
										{
											"id": 57,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "id of cache namespace\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 67,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "default"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								52
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								54
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								55
							]
						}
					],
					"sources": [
						{
							"fileName": "src/cache/CacheManager.ts",
							"line": 9,
							"character": 33
						}
					]
				},
				{
					"id": 58,
					"name": "CacheProviderBuilder",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "An adapter of {@link CacheManager} for {@link Client}"
					},
					"children": [
						{
							"id": 59,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 60,
									"name": "new CacheProviderBuilder",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 58,
										"name": "default"
									}
								}
							]
						},
						{
							"id": 61,
							"name": "manager",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Cache manager, adapted by this adapter"
							},
							"sources": [
								{
									"fileName": "src/cache/CacheProviderBuilder.ts",
									"line": 7,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 51,
								"name": "default"
							},
							"defaultValue": "..."
						},
						{
							"id": 62,
							"name": "getCacheProvider",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/cache/CacheProviderBuilder.ts",
									"line": 10,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 63,
									"name": "getCacheProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get a cache provider"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 64,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 65,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 66,
															"name": "client",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 144,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 210,
																		"name": "default"
																	}
																],
																"name": "default"
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 121,
														"typeArguments": [
															{
																"type": "reference",
																"id": 126,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "default"
															}
														],
														"name": "CacheProvider"
													}
												}
											]
										}
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								59
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								61
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								62
							]
						}
					],
					"sources": [
						{
							"fileName": "src/cache/CacheProviderBuilder.ts",
							"line": 5,
							"character": 41
						}
					]
				},
				{
					"id": 67,
					"name": "CollectionCacheNamespace",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Represents a cache namespace"
					},
					"children": [
						{
							"id": 68,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 69,
									"name": "new CollectionCacheNamespace",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 70,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 71,
											"name": "V",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 67,
										"typeArguments": [
											{
												"type": "reference",
												"name": "K"
											},
											{
												"type": "reference",
												"name": "V"
											}
										],
										"name": "default"
									}
								}
							]
						},
						{
							"id": 72,
							"name": "#data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"shortText": "Collection used by this cache namespace"
							},
							"sources": [
								{
									"fileName": "src/cache/CollectionCacheNamespace.ts",
									"line": 7,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"id": 3,
								"typeArguments": [
									{
										"type": "reference",
										"name": "K"
									},
									{
										"type": "reference",
										"name": "V"
									}
								],
								"name": "Collection"
							},
							"defaultValue": "..."
						},
						{
							"id": 73,
							"name": "delete",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/cache/CollectionCacheNamespace.ts",
									"line": 13,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 74,
									"name": "delete",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Delete a key from collection"
									},
									"parameters": [
										{
											"id": 75,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "key to delete\n"
											},
											"type": {
												"type": "reference",
												"name": "K"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									},
									"implementationOf": {
										"type": "reference",
										"id": 135,
										"name": "CacheNamespace.delete"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 134,
								"name": "CacheNamespace.delete"
							}
						},
						{
							"id": 88,
							"name": "filter",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/cache/CollectionCacheNamespace.ts",
									"line": 49,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 89,
									"name": "filter",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "The same as {@link Collection#filter}"
									},
									"parameters": [
										{
											"id": 90,
											"name": "predicate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 91,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 92,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 93,
																	"name": "value",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "V"
																	}
																},
																{
																	"id": 94,
																	"name": "key",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "K"
																	}
																},
																{
																	"id": 95,
																	"name": "collection",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"id": 3,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "K"
																			},
																			{
																				"type": "reference",
																				"name": "V"
																			}
																		],
																		"name": "Collection"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 3,
												"typeArguments": [
													{
														"type": "reference",
														"name": "K"
													},
													{
														"type": "reference",
														"name": "V"
													}
												],
												"name": "Collection"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 99,
							"name": "forEach",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/cache/CollectionCacheNamespace.ts",
									"line": 59,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 100,
									"name": "forEach",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "The same as {@link Collection#forEach}"
									},
									"parameters": [
										{
											"id": 101,
											"name": "predicate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 102,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 103,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 104,
																	"name": "value",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "V"
																	}
																},
																{
																	"id": 105,
																	"name": "key",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "K"
																	}
																},
																{
																	"id": 106,
																	"name": "collection",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"id": 3,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "K"
																			},
																			{
																				"type": "reference",
																				"name": "V"
																			}
																		],
																		"name": "Collection"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 76,
							"name": "get",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/cache/CollectionCacheNamespace.ts",
									"line": 21,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 77,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get a key from collection"
									},
									"parameters": [
										{
											"id": 78,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "key to get\n"
											},
											"type": {
												"type": "reference",
												"name": "K"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"name": "V"
													}
												]
											}
										],
										"name": "Promise"
									},
									"implementationOf": {
										"type": "reference",
										"id": 128,
										"name": "CacheNamespace.get"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 127,
								"name": "CacheNamespace.get"
							}
						},
						{
							"id": 79,
							"name": "has",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/cache/CollectionCacheNamespace.ts",
									"line": 29,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 80,
									"name": "has",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Check if collection has a key"
									},
									"parameters": [
										{
											"id": 81,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ket to check\n"
											},
											"type": {
												"type": "reference",
												"name": "K"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									},
									"implementationOf": {
										"type": "reference",
										"id": 138,
										"name": "CacheNamespace.has"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 137,
								"name": "CacheNamespace.has"
							}
						},
						{
							"id": 96,
							"name": "random",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/cache/CollectionCacheNamespace.ts",
									"line": 54,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 97,
									"name": "random",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "The same as {@link Collection#random}"
									},
									"parameters": [
										{
											"id": 98,
											"name": "amount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "V"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "V"
														}
													}
												]
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 82,
							"name": "set",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/cache/CollectionCacheNamespace.ts",
									"line": 38,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 83,
									"name": "set",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Change key's value"
									},
									"parameters": [
										{
											"id": 84,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "key to set"
											},
											"type": {
												"type": "reference",
												"name": "K"
											}
										},
										{
											"id": 85,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "value to set\n"
											},
											"type": {
												"type": "reference",
												"name": "V"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									},
									"implementationOf": {
										"type": "reference",
										"id": 131,
										"name": "CacheNamespace.set"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 130,
								"name": "CacheNamespace.set"
							}
						},
						{
							"id": 86,
							"name": "size",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/cache/CollectionCacheNamespace.ts",
									"line": 44,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 87,
									"name": "size",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get total elements in the collection"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "Promise"
									},
									"implementationOf": {
										"type": "reference",
										"id": 141,
										"name": "CacheNamespace.size"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 140,
								"name": "CacheNamespace.size"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								68
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								72
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								73,
								88,
								99,
								76,
								79,
								96,
								82,
								86
							]
						}
					],
					"sources": [
						{
							"fileName": "src/cache/CollectionCacheNamespace.ts",
							"line": 5,
							"character": 45
						}
					],
					"typeParameter": [
						{
							"id": 107,
							"name": "K",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 108,
							"name": "V",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 126,
							"typeArguments": [
								{
									"type": "reference",
									"name": "K"
								},
								{
									"type": "reference",
									"name": "V"
								}
							],
							"name": "CacheNamespace"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						51,
						58,
						67
					]
				}
			],
			"sources": [
				{
					"fileName": "src/cache/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2,
			"name": "collection",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3,
					"name": "Collection",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "An utility data structure used within the library"
					},
					"children": [
						{
							"id": 4,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 5,
									"name": "new Collection",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 6,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										},
										{
											"id": 7,
											"name": "V",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 8,
											"name": "entries",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "typeOperator",
														"operator": "readonly",
														"target": {
															"type": "array",
															"elementType": {
																"type": "typeOperator",
																"operator": "readonly",
																"target": {
																	"type": "tuple",
																	"elements": [
																		{
																			"type": "reference",
																			"name": "K"
																		},
																		{
																			"type": "reference",
																			"name": "V"
																		}
																	]
																}
															}
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3,
										"typeArguments": [
											{
												"type": "reference",
												"name": "K"
											},
											{
												"type": "reference",
												"name": "V"
											}
										],
										"name": "Collection"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Map<K, V>.constructor"
									}
								},
								{
									"id": 9,
									"name": "new Collection",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 10,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										},
										{
											"id": 11,
											"name": "V",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 12,
											"name": "iterable",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "typeOperator",
														"operator": "readonly",
														"target": {
															"type": "tuple",
															"elements": [
																{
																	"type": "reference",
																	"name": "K"
																},
																{
																	"type": "reference",
																	"name": "V"
																}
															]
														}
													}
												],
												"name": "Iterable"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3,
										"typeArguments": [
											{
												"type": "reference",
												"name": "K"
											},
											{
												"type": "reference",
												"name": "V"
											}
										],
										"name": "Collection"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Map<K, V>.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Map<K, V>.constructor"
							}
						},
						{
							"id": 32,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/collection/index.ts",
									"line": 47,
									"character": 7
								}
							],
							"signatures": [
								{
									"id": 33,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create a new collection based on this one"
									},
									"type": {
										"type": "reference",
										"id": 3,
										"typeArguments": [
											{
												"type": "reference",
												"name": "K"
											},
											{
												"type": "reference",
												"name": "V"
											}
										],
										"name": "Collection"
									}
								}
							]
						},
						{
							"id": 34,
							"name": "equal",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/collection/index.ts",
									"line": 55,
									"character": 7
								}
							],
							"signatures": [
								{
									"id": 35,
									"name": "equal",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Check if two collections are equal"
									},
									"parameters": [
										{
											"id": 36,
											"name": "collection",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "collection to compare to\n"
											},
											"type": {
												"type": "reference",
												"id": 3,
												"typeArguments": [
													{
														"type": "reference",
														"name": "K"
													},
													{
														"type": "reference",
														"name": "V"
													}
												],
												"name": "Collection"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 16,
							"name": "filter",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/collection/index.ts",
									"line": 30,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 17,
									"name": "filter",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Filter out the elements which don't meet requirements"
									},
									"parameters": [
										{
											"id": 18,
											"name": "filter",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "function which filters\n"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 19,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 20,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 21,
																	"name": "value",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "V"
																	}
																},
																{
																	"id": 22,
																	"name": "key",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "K"
																	}
																},
																{
																	"id": 23,
																	"name": "collection",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"id": 3,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "K"
																			},
																			{
																				"type": "reference",
																				"name": "V"
																			}
																		],
																		"name": "Collection"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3,
										"typeArguments": [
											{
												"type": "reference",
												"name": "K"
											},
											{
												"type": "reference",
												"name": "V"
											}
										],
										"name": "Collection"
									}
								}
							]
						},
						{
							"id": 24,
							"name": "forEach",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/collection/index.ts",
									"line": 40,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 25,
									"name": "forEach",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Execute a function on each of elements of map"
									},
									"parameters": [
										{
											"id": 26,
											"name": "predicate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "function to use\n"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 27,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 28,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 29,
																	"name": "value",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "V"
																	}
																},
																{
																	"id": 30,
																	"name": "key",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "K"
																	}
																},
																{
																	"id": 31,
																	"name": "collection",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"id": 3,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "K"
																			},
																			{
																				"type": "reference",
																				"name": "V"
																			}
																		],
																		"name": "Collection"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "Map.forEach"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Map.forEach"
							}
						},
						{
							"id": 13,
							"name": "random",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/collection/index.ts",
									"line": 9,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 14,
									"name": "random",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get a random element from collection"
									},
									"parameters": [
										{
											"id": 15,
											"name": "amount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "amount of elements to be retrieved\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "V"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "V"
												}
											}
										]
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								32,
								34,
								16,
								24,
								13
							]
						}
					],
					"sources": [
						{
							"fileName": "src/collection/index.ts",
							"line": 4,
							"character": 23
						}
					],
					"typeParameter": [
						{
							"id": 37,
							"name": "K",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 38,
							"name": "V",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "K"
								},
								{
									"type": "reference",
									"name": "V"
								}
							],
							"name": "Map"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3
					]
				}
			],
			"sources": [
				{
					"fileName": "src/collection/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 39,
			"name": "core",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 109,
					"name": "Base",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Base structure for everything which has snowflake"
					},
					"children": [
						{
							"id": 110,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 111,
									"name": "new Base",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 112,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "id\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 109,
										"name": "default"
									}
								}
							]
						},
						{
							"id": 113,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Unique id"
							},
							"sources": [
								{
									"fileName": "src/core/structures/Base.ts",
									"line": 6,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 117,
							"name": "createdAt",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get creation date"
							},
							"sources": [
								{
									"fileName": "src/core/structures/Base.ts",
									"line": 24,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 118,
									"name": "createdAt",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get creation date"
									},
									"type": {
										"type": "reference",
										"name": "Date"
									}
								}
							]
						},
						{
							"id": 119,
							"name": "createdTimestamp",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Unix timestamp"
							},
							"sources": [
								{
									"fileName": "src/core/structures/Base.ts",
									"line": 29,
									"character": 22
								}
							],
							"getSignature": [
								{
									"id": 120,
									"name": "createdTimestamp",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Unix timestamp"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						},
						{
							"id": 114,
							"name": "equal",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/structures/Base.ts",
									"line": 19,
									"character": 7
								}
							],
							"signatures": [
								{
									"id": 115,
									"name": "equal",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Check, if two entities are equal"
									},
									"parameters": [
										{
											"id": 116,
											"name": "compareTo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "entity to compare to\n"
											},
											"type": {
												"type": "reference",
												"id": 109,
												"name": "default"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								110
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								113
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								117,
								119
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								114
							]
						}
					],
					"sources": [
						{
							"fileName": "src/core/structures/Base.ts",
							"line": 4,
							"character": 25
						}
					]
				},
				{
					"id": 144,
					"name": "Client",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Entry point for all of Discordoo. Manages modules and events"
					},
					"children": [
						{
							"id": 145,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 146,
									"name": "new Client",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 147,
											"name": "ClientStack",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 210,
												"name": "default"
											},
											"default": {
												"type": "reference",
												"id": 210,
												"name": "default"
											}
										}
									],
									"parameters": [
										{
											"id": 148,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 144,
										"typeArguments": [
											{
												"type": "reference",
												"name": "ClientStack"
											}
										],
										"name": "default"
									},
									"overwrites": {
										"type": "reference",
										"name": "TypedEmitter<ListenerSignature<ClientStack['events']>>.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "TypedEmitter<ListenerSignature<ClientStack['events']>>.constructor"
							}
						},
						{
							"id": 152,
							"name": "cache",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "CacheProvider used by this module"
							},
							"sources": [
								{
									"fileName": "src/core/Client.ts",
									"line": 28,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 121,
										"typeArguments": [
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "literal",
													"value": "cache"
												},
												"objectType": {
													"type": "reference",
													"name": "ClientStack"
												}
											}
										],
										"name": "CacheProvider"
									}
								]
							},
							"defaultValue": "null"
						},
						{
							"id": 153,
							"name": "gateway",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "GatewayProvider used by this module"
							},
							"sources": [
								{
									"fileName": "src/core/Client.ts",
									"line": 31,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 186,
										"typeArguments": [
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "literal",
													"value": "gateway"
												},
												"objectType": {
													"type": "reference",
													"name": "ClientStack"
												}
											}
										],
										"name": "GatewayProvider"
									}
								]
							},
							"defaultValue": "null"
						},
						{
							"id": 150,
							"name": "modules",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Module manager of this client"
							},
							"sources": [
								{
									"fileName": "src/core/Client.ts",
									"line": 22,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 225,
								"name": "default"
							},
							"defaultValue": "..."
						},
						{
							"id": 151,
							"name": "rest",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "RESTProvider used by this module"
							},
							"sources": [
								{
									"fileName": "src/core/Client.ts",
									"line": 25,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 275,
										"typeArguments": [
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "literal",
													"value": "rest"
												},
												"objectType": {
													"type": "reference",
													"name": "ClientStack"
												}
											}
										],
										"name": "RESTProvider"
									}
								]
							},
							"defaultValue": "null"
						},
						{
							"id": 149,
							"name": "token",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Token used by this client"
							},
							"sources": [
								{
									"fileName": "src/core/Client.ts",
									"line": 14,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 154,
							"name": "m",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/Client.ts",
									"line": 37,
									"character": 3
								}
							],
							"signatures": [
								{
									"id": 155,
									"name": "m",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get a module. Alias for module(id)."
									},
									"parameters": [
										{
											"id": 156,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "module id\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 215,
												"name": "default"
											}
										]
									}
								}
							]
						},
						{
							"id": 157,
							"name": "module",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/Client.ts",
									"line": 45,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 158,
									"name": "module",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get a module"
									},
									"parameters": [
										{
											"id": 159,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "module id\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 215,
												"name": "default"
											}
										]
									}
								}
							]
						},
						{
							"id": 160,
							"name": "use",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/Client.ts",
									"line": 53,
									"character": 5
								}
							],
							"signatures": [
								{
									"id": 161,
									"name": "use",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create a new module load group"
									},
									"parameters": [
										{
											"id": 162,
											"name": "modules",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"comment": {
												"text": "modules in the group\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 215,
													"name": "default"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 169,
							"name": "useCacheProvider",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/Client.ts",
									"line": 71,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 170,
									"name": "useCacheProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Set the {@link CacheProvider} to be used by this client\nBounds it's context to {@link Client}"
									},
									"parameters": [
										{
											"id": 171,
											"name": "provider",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "function, that returns desired CacheProvider\n"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 172,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 173,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 174,
																	"name": "client",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"id": 144,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 210,
																				"name": "default"
																			}
																		],
																		"name": "default"
																	}
																}
															],
															"type": {
																"type": "reference",
																"id": 121,
																"typeArguments": [
																	{
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "literal",
																			"value": "cache"
																		},
																		"objectType": {
																			"type": "reference",
																			"name": "ClientStack"
																		}
																	}
																],
																"name": "CacheProvider"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 175,
							"name": "useGatewayProvider",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/Client.ts",
									"line": 80,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 176,
									"name": "useGatewayProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Set the {@link CacheProvider} to be used by this client\nBounds it's context to {@link Client}"
									},
									"parameters": [
										{
											"id": 177,
											"name": "provider",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "function, that returns desired CacheProvider\n"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 178,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 179,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 180,
																	"name": "client",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"id": 144,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 210,
																				"name": "default"
																			}
																		],
																		"name": "default"
																	}
																}
															],
															"type": {
																"type": "reference",
																"id": 186,
																"typeArguments": [
																	{
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "literal",
																			"value": "gateway"
																		},
																		"objectType": {
																			"type": "reference",
																			"name": "ClientStack"
																		}
																	}
																],
																"name": "GatewayProvider"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 163,
							"name": "useRESTProvider",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/Client.ts",
									"line": 62,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 164,
									"name": "useRESTProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Set the {@link RESTProvider} to be used by this client\nBounds it's context to {@link Client}"
									},
									"parameters": [
										{
											"id": 165,
											"name": "provider",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "function, that returns desired RESTProvider\n"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 166,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 167,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 168,
																	"name": "client",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"id": 144,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 210,
																				"name": "default"
																			}
																		],
																		"name": "default"
																	}
																}
															],
															"type": {
																"type": "reference",
																"id": 275,
																"typeArguments": [
																	{
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "literal",
																			"value": "rest"
																		},
																		"objectType": {
																			"type": "reference",
																			"name": "ClientStack"
																		}
																	}
																],
																"name": "RESTProvider"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								145
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								152,
								153,
								150,
								151,
								149
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								154,
								157,
								160,
								169,
								175,
								163
							]
						}
					],
					"sources": [
						{
							"fileName": "src/core/Client.ts",
							"line": 10,
							"character": 27
						}
					],
					"typeParameter": [
						{
							"id": 181,
							"name": "ClientStack",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 210,
								"name": "DefaultClientStack"
							},
							"default": {
								"type": "reference",
								"id": 210,
								"name": "DefaultClientStack"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "events"
											},
											"objectType": {
												"type": "reference",
												"name": "ClientStack"
											}
										}
									],
									"name": "ListenerSignature"
								}
							],
							"name": "TypedEmitter"
						}
					]
				},
				{
					"id": 279,
					"name": "Constants",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 282,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 283,
									"name": "new Constants",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 279,
										"name": "default"
									}
								}
							]
						},
						{
							"id": 280,
							"name": "API_ENDPOINT",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "src/core/Constants.ts",
									"line": 5,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'https://discord.com/api'"
						},
						{
							"id": 281,
							"name": "DEFAULT_REST_OPTIONS",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "src/core/Constants.ts",
									"line": 6,
									"character": 29
								}
							],
							"type": {
								"type": "reference",
								"id": 299,
								"name": "default"
							},
							"defaultValue": "..."
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								282
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								280,
								281
							]
						}
					],
					"sources": [
						{
							"fileName": "src/core/Constants.ts",
							"line": 4,
							"character": 30
						}
					]
				},
				{
					"id": 225,
					"name": "ModuleManager",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Module manager for Client\nManages module loadment and their \"injection\""
					},
					"children": [
						{
							"id": 226,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 227,
									"name": "new ModuleManager",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 228,
											"name": "client",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "client, into which modules will be loaded\n"
											},
											"type": {
												"type": "reference",
												"id": 144,
												"typeArguments": [
													{
														"type": "reference",
														"id": 210,
														"name": "default"
													}
												],
												"name": "default"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 225,
										"name": "default"
									}
								}
							]
						},
						{
							"id": 230,
							"name": "_moduleLoadGroups",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"shortText": "Array of load groups"
							},
							"sources": [
								{
									"fileName": "src/core/modules/ModuleManager.ts",
									"line": 16,
									"character": 27
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"id": 215,
										"name": "default"
									}
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 231,
							"name": "client",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Client which uses this manager"
							},
							"sources": [
								{
									"fileName": "src/core/modules/ModuleManager.ts",
									"line": 19,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 144,
								"typeArguments": [
									{
										"type": "reference",
										"id": 210,
										"name": "default"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 229,
							"name": "modules",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Modules loaded by this manager"
							},
							"sources": [
								{
									"fileName": "src/core/modules/ModuleManager.ts",
									"line": 13,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 3,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									},
									{
										"type": "reference",
										"id": 215,
										"name": "default"
									}
								],
								"name": "Collection"
							},
							"defaultValue": "..."
						},
						{
							"id": 232,
							"name": "createLoadGroup",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/modules/ModuleManager.ts",
									"line": 36,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 233,
									"name": "createLoadGroup",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a new load group",
										"text": "Load group is a bunch of modules, which will be loaded together sequentially.\nGroups can be either loaded in parallel or sequentially\n"
									},
									"parameters": [
										{
											"id": 234,
											"name": "modules",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"comment": {
												"text": "modules to add to a new load group\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 215,
													"name": "default"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 241,
							"name": "getModule",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/modules/ModuleManager.ts",
									"line": 80,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 242,
									"name": "getModule",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Retrieve a module"
									},
									"parameters": [
										{
											"id": 243,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "module's id\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 215,
												"name": "default"
											}
										]
									}
								}
							]
						},
						{
							"id": 238,
							"name": "init",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/modules/ModuleManager.ts",
									"line": 52,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 239,
									"name": "init",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Initialize all modules"
									},
									"parameters": [
										{
											"id": 240,
											"name": "async",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "determines if load groups shall be loaded in parallel\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "false"
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 235,
							"name": "use",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/modules/ModuleManager.ts",
									"line": 44,
									"character": 5
								}
							],
							"signatures": [
								{
									"id": 236,
									"name": "use",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "An alias to ModuleManager#createLoadGroup"
									},
									"parameters": [
										{
											"id": 237,
											"name": "modules",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"comment": {
												"text": "modules to add to a new load group\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 215,
													"name": "default"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								226
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								230,
								231,
								229
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								232,
								241,
								238,
								235
							]
						}
					],
					"sources": [
						{
							"fileName": "src/core/modules/ModuleManager.ts",
							"line": 9,
							"character": 34
						}
					]
				},
				{
					"id": 126,
					"name": "CacheNamespace",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Represents a cache namespace. Custom caching modules must implement it",
						"tags": [
							{
								"tag": "note",
								"text": "Some implementations may use remote cache, e.g. Redis, so all the methods are async\n"
							}
						]
					},
					"children": [
						{
							"id": 134,
							"name": "delete",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 135,
									"name": "delete",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Delete a key from cache"
									},
									"parameters": [
										{
											"id": 136,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "cache to delete\n"
											},
											"type": {
												"type": "reference",
												"name": "K"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 127,
							"name": "get",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 128,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get value from key"
									},
									"parameters": [
										{
											"id": 129,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "key to get\n"
											},
											"type": {
												"type": "reference",
												"name": "K"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"name": "V"
													}
												]
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 137,
							"name": "has",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 138,
									"name": "has",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Check if key exists in cache"
									},
									"parameters": [
										{
											"id": 139,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "key to check\n"
											},
											"type": {
												"type": "reference",
												"name": "K"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 130,
							"name": "set",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 131,
									"name": "set",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Set a key to given value"
									},
									"parameters": [
										{
											"id": 132,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "key to set"
											},
											"type": {
												"type": "reference",
												"name": "K"
											}
										},
										{
											"id": 133,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "value to be set\n"
											},
											"type": {
												"type": "reference",
												"name": "V"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 140,
							"name": "size",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 141,
									"name": "size",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get size of cache"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								134,
								127,
								137,
								130,
								140
							]
						}
					],
					"sources": [
						{
							"fileName": "src/core/providers/cache/CacheNamespace.ts",
							"line": 5,
							"character": 39
						}
					],
					"typeParameter": [
						{
							"id": 142,
							"name": "K",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 143,
							"name": "V",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"id": 67,
							"name": "CollectionCacheNamespace"
						}
					]
				},
				{
					"id": 182,
					"name": "ClientEventsHandlers",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Client events"
					},
					"children": [
						{
							"id": 183,
							"name": "ready",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Emitted once the client is ready"
							},
							"sources": [
								{
									"fileName": "src/core/ClientEventsHandlers.ts",
									"line": 5,
									"character": 7
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 184,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 185,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								183
							]
						}
					],
					"sources": [
						{
							"fileName": "src/core/ClientEventsHandlers.ts",
							"line": 2,
							"character": 45
						}
					]
				},
				{
					"id": 210,
					"name": "DefaultClientStack",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 211,
							"name": "cache",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/DefaultClientStack.ts",
									"line": 7,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"id": 126,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "unknown"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 213,
							"name": "events",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/DefaultClientStack.ts",
									"line": 9,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 182,
								"name": "default"
							}
						},
						{
							"id": 214,
							"name": "gateway",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/DefaultClientStack.ts",
									"line": 10,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 195,
								"name": "GatewayProviderUtils"
							}
						},
						{
							"id": 212,
							"name": "rest",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/DefaultClientStack.ts",
									"line": 8,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"id": 244,
								"name": "default"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								211,
								213,
								214,
								212
							]
						}
					],
					"sources": [
						{
							"fileName": "src/core/DefaultClientStack.ts",
							"line": 6,
							"character": 43
						}
					]
				},
				{
					"id": 195,
					"name": "GatewayProviderUtils",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 196,
							"name": "error",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/providers/gateway/GatewayProvider.ts",
									"line": 6,
									"character": 7
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 197,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 198,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 199,
													"name": "callback",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 200,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 201,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 202,
							"name": "prepare",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/providers/gateway/GatewayProvider.ts",
									"line": 7,
									"character": 9
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 203,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 204,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 205,
													"name": "token",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise"
											}
										}
									]
								}
							}
						},
						{
							"id": 206,
							"name": "send",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/providers/gateway/GatewayProvider.ts",
									"line": 8,
									"character": 6
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 207,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 208,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 209,
													"name": "payload",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GatewaySendPayload"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								196,
								202,
								206
							]
						}
					],
					"sources": [
						{
							"fileName": "src/core/providers/gateway/GatewayProvider.ts",
							"line": 5,
							"character": 30
						}
					]
				},
				{
					"id": 215,
					"name": "Module",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Represents a module"
					},
					"children": [
						{
							"id": 221,
							"name": "destroyed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Function, which will be emitted once module is destroyed"
							},
							"sources": [
								{
									"fileName": "src/core/modules/Module.ts",
									"line": 13,
									"character": 11
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 222,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 223,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Promise"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 224,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Unique id for this module"
							},
							"sources": [
								{
									"fileName": "src/core/modules/Module.ts",
									"line": 15,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "symbol"
									}
								]
							}
						},
						{
							"id": 217,
							"name": "init",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Function, which will be emitted once module was initialized on client's startup",
								"tags": [
									{
										"tag": "param",
										"text": "client, the module will be bound to\n",
										"param": "client"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/core/modules/Module.ts",
									"line": 11,
									"character": 6
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 218,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 219,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 220,
													"name": "client",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 144,
														"typeArguments": [
															{
																"type": "reference",
																"id": 210,
																"name": "default"
															}
														],
														"name": "default"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Promise"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 216,
							"name": "initialized",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Whether the module was initialized"
							},
							"sources": [
								{
									"fileName": "src/core/modules/Module.ts",
									"line": 6,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								221,
								224,
								217,
								216
							]
						}
					],
					"sources": [
						{
							"fileName": "src/core/modules/Module.ts",
							"line": 4,
							"character": 31
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"id": 391,
							"name": "ModuleHostModule"
						}
					]
				},
				{
					"id": 284,
					"name": "RESTResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Data fetched from REST"
					},
					"children": [
						{
							"id": 285,
							"name": "body",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Body"
							},
							"sources": [
								{
									"fileName": "src/core/providers/rest/RESTResponse.ts",
									"line": 7,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "T"
							}
						},
						{
							"id": 287,
							"name": "headers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Headers"
							},
							"sources": [
								{
									"fileName": "src/core/providers/rest/RESTResponse.ts",
									"line": 11,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record"
							}
						},
						{
							"id": 286,
							"name": "statusCode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Status code"
							},
							"sources": [
								{
									"fileName": "src/core/providers/rest/RESTResponse.ts",
									"line": 9,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								285,
								287,
								286
							]
						}
					],
					"sources": [
						{
							"fileName": "src/core/providers/rest/RESTResponse.ts",
							"line": 5,
							"character": 37
						}
					],
					"typeParameter": [
						{
							"id": 288,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"comment": {
								"shortText": "body type\n"
							},
							"default": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record"
							}
						}
					]
				},
				{
					"id": 244,
					"name": "RequestBuilder",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Represents a request builder"
					},
					"children": [
						{
							"id": 260,
							"name": "delete",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 261,
									"name": "delete",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create DELETE request"
									},
									"typeParameter": [
										{
											"id": 262,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 263,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "options\n"
											},
											"type": {
												"type": "reference",
												"id": 272,
												"name": "default"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 284,
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "default"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 252,
							"name": "get",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 253,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create GET request"
									},
									"typeParameter": [
										{
											"id": 254,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 255,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "options\n"
											},
											"type": {
												"type": "reference",
												"id": 272,
												"name": "default"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 284,
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "default"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 268,
							"name": "patch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 269,
									"name": "patch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create PATCH request"
									},
									"typeParameter": [
										{
											"id": 270,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 271,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "options\n"
											},
											"type": {
												"type": "reference",
												"id": 272,
												"name": "default"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 284,
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "default"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 256,
							"name": "post",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 257,
									"name": "post",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create POST request"
									},
									"typeParameter": [
										{
											"id": 258,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 259,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "options\n"
											},
											"type": {
												"type": "reference",
												"id": 272,
												"name": "default"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 284,
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "default"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 264,
							"name": "put",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 265,
									"name": "put",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create PUT request"
									},
									"typeParameter": [
										{
											"id": 266,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 267,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "options\n"
											},
											"type": {
												"type": "reference",
												"id": 272,
												"name": "default"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 284,
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "default"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 248,
							"name": "query",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 249,
									"name": "query",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add query data"
									},
									"parameters": [
										{
											"id": 250,
											"name": "k",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "key"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 251,
											"name": "v",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "value\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 244,
										"name": "default"
									}
								}
							]
						},
						{
							"id": 245,
							"name": "url",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 246,
									"name": "url",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add part(s) to the URI"
									},
									"parameters": [
										{
											"id": 247,
											"name": "paths",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"comment": {
												"text": "paths\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 244,
										"name": "default"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								260,
								252,
								268,
								256,
								264,
								248,
								245
							]
						}
					],
					"sources": [
						{
							"fileName": "src/core/providers/rest/RequestBuilder.ts",
							"line": 5,
							"character": 39
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"id": 313,
							"name": "RESTRequestBuilder"
						}
					]
				},
				{
					"id": 272,
					"name": "RequestOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Request options"
					},
					"children": [
						{
							"id": 274,
							"name": "body",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Body"
							},
							"sources": [
								{
									"fileName": "src/core/providers/rest/RequestOptions.ts",
									"line": 6,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record"
							}
						},
						{
							"id": 273,
							"name": "headers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Headers"
							},
							"sources": [
								{
									"fileName": "src/core/providers/rest/RequestOptions.ts",
									"line": 4,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								274,
								273
							]
						}
					],
					"sources": [
						{
							"fileName": "src/core/providers/rest/RequestOptions.ts",
							"line": 2,
							"character": 39
						}
					]
				},
				{
					"id": 121,
					"name": "CacheProvider",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Represents a CacheProvider. Bound to Client context"
					},
					"sources": [
						{
							"fileName": "src/core/providers/cache/CacheProvider.ts",
							"line": 4,
							"character": 18
						}
					],
					"typeParameter": [
						{
							"id": 125,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 126,
								"name": "CacheNamespace"
							},
							"default": {
								"type": "reference",
								"id": 126,
								"name": "CacheNamespace"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 122,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/providers/cache/CacheProvider.ts",
									"line": 4,
									"character": 63
								}
							],
							"signatures": [
								{
									"id": 123,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 124,
											"name": "namespace",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									}
								}
							]
						}
					}
				},
				{
					"id": 186,
					"name": "GatewayProvider",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "src/core/providers/gateway/GatewayProvider.ts",
							"line": 11,
							"character": 20
						}
					],
					"typeParameter": [
						{
							"id": 187,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 195,
								"name": "GatewayProviderUtils"
							},
							"default": {
								"type": "reference",
								"id": 195,
								"name": "GatewayProviderUtils"
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"id": 188,
								"name": "GatewayProviderSub"
							},
							{
								"type": "reference",
								"name": "T"
							}
						]
					}
				},
				{
					"id": 188,
					"name": "GatewayProviderSub",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "src/core/providers/gateway/GatewayProvider.ts",
							"line": 3,
							"character": 23
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 189,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/providers/gateway/GatewayProvider.ts",
									"line": 3,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 190,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 191,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 192,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "src/core/providers/gateway/GatewayProvider.ts",
															"line": 3,
															"character": 36
														}
													],
													"signatures": [
														{
															"id": 193,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 194,
																	"name": "message",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "GatewayReceivePayload"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 275,
					"name": "RESTProvider",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Represents a RESTProvider. Bound to Client context"
					},
					"sources": [
						{
							"fileName": "src/core/providers/rest/RESTProvider.ts",
							"line": 4,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 278,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 244,
								"name": "RequestBuilder"
							},
							"default": {
								"type": "reference",
								"id": 244,
								"name": "RequestBuilder"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 276,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/providers/rest/RESTProvider.ts",
									"line": 4,
									"character": 62
								}
							],
							"signatures": [
								{
									"id": 277,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "T"
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						109,
						144,
						279,
						225
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						126,
						182,
						210,
						195,
						215,
						284,
						244,
						272
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						121,
						186,
						188,
						275
					]
				}
			],
			"sources": [
				{
					"fileName": "src/core/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 40,
			"name": "main",
			"kind": 1,
			"kindString": "Module",
			"flags": {}
		},
		{
			"id": 41,
			"name": "rest",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 289,
					"name": "RESTClient",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Helps to send requests to Discord"
					},
					"children": [
						{
							"id": 290,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 291,
									"name": "new RESTClient",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 292,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "token to use in requests"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 293,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "options\n"
											},
											"type": {
												"type": "reference",
												"id": 299,
												"name": "default"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"id": 289,
										"name": "default"
									}
								}
							]
						},
						{
							"id": 295,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"type": {
								"type": "reference",
								"id": 299,
								"name": "default"
							},
							"defaultValue": "..."
						},
						{
							"id": 294,
							"name": "token",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 296,
							"name": "request",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/rest/RESTClient.ts",
									"line": 14,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 297,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create a request"
									},
									"parameters": [
										{
											"id": 298,
											"name": "tokenOverride",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 313,
										"name": "default"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								290
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								295,
								294
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								296
							]
						}
					],
					"sources": [
						{
							"fileName": "src/rest/RESTClient.ts",
							"line": 6,
							"character": 31
						}
					]
				},
				{
					"id": 303,
					"name": "RESTProviderBuilder",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Builds a RestProvider for {@link Client}"
					},
					"children": [
						{
							"id": 304,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 305,
									"name": "new RESTProviderBuilder",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 306,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "builder's options\n"
											},
											"type": {
												"type": "reference",
												"id": 299,
												"name": "default"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"id": 303,
										"name": "default"
									}
								}
							]
						},
						{
							"id": 307,
							"name": "client",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "{@link RESTClient} used by this builder"
							},
							"sources": [
								{
									"fileName": "src/rest/RESTProviderBuilder.ts",
									"line": 9,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 289,
								"name": "default"
							}
						},
						{
							"id": 308,
							"name": "getRestProvider",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/rest/RESTProviderBuilder.ts",
									"line": 21,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 309,
									"name": "getRestProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get rest provider"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 310,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 311,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 312,
															"name": "client",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 144,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 210,
																		"name": "default"
																	}
																],
																"name": "default"
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 275,
														"typeArguments": [
															{
																"type": "reference",
																"id": 244,
																"name": "default"
															}
														],
														"name": "RESTProvider"
													}
												}
											]
										}
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								304
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								307
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								308
							]
						}
					],
					"sources": [
						{
							"fileName": "src/rest/RESTProviderBuilder.ts",
							"line": 7,
							"character": 40
						}
					]
				},
				{
					"id": 313,
					"name": "RESTRequestBuilder",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Create requests to Discord",
						"tags": [
							{
								"tag": "internal",
								"text": "\n"
							}
						]
					},
					"children": [
						{
							"id": 314,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 315,
									"name": "new RESTRequestBuilder",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 316,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "token to be used by this request"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 317,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "request options\n"
											},
											"type": {
												"type": "reference",
												"id": 299,
												"name": "default"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 313,
										"name": "default"
									}
								}
							]
						},
						{
							"id": 322,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Tokens used by this request"
							},
							"sources": [
								{
									"fileName": "src/rest/RESTRequestBuilder.ts",
									"line": 21,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"id": 299,
								"name": "default"
							}
						},
						{
							"id": 319,
							"name": "queryStack",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"shortText": "Query to be built"
							},
							"sources": [
								{
									"fileName": "src/rest/RESTRequestBuilder.ts",
									"line": 14,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Record"
							},
							"defaultValue": "..."
						},
						{
							"id": 320,
							"name": "retries",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"shortText": "Retries done"
							},
							"sources": [
								{
									"fileName": "src/rest/RESTRequestBuilder.ts",
									"line": 16,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						},
						{
							"id": 318,
							"name": "stack",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"shortText": "URI parts"
							},
							"sources": [
								{
									"fileName": "src/rest/RESTRequestBuilder.ts",
									"line": 12,
									"character": 15
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 321,
							"name": "token",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Token of this request"
							},
							"sources": [
								{
									"fileName": "src/rest/RESTRequestBuilder.ts",
									"line": 19,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 337,
							"name": "endpoint",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "URI request will be sent to"
							},
							"sources": [
								{
									"fileName": "src/rest/RESTRequestBuilder.ts",
									"line": 64,
									"character": 14
								}
							],
							"getSignature": [
								{
									"id": 338,
									"name": "endpoint",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "URI request will be sent to"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 360,
							"name": "delete",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/rest/RESTRequestBuilder.ts",
									"line": 154,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 361,
									"name": "delete",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create DELETE request"
									},
									"typeParameter": [
										{
											"id": 362,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 363,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "options\n"
											},
											"type": {
												"type": "reference",
												"id": 272,
												"name": "default"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 284,
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "default"
											}
										],
										"name": "Promise"
									},
									"implementationOf": {
										"type": "reference",
										"id": 261,
										"name": "RequestBuilder.delete"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 260,
								"name": "RequestBuilder.delete"
							}
						},
						{
							"id": 344,
							"name": "get",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/rest/RESTRequestBuilder.ts",
									"line": 122,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 345,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create GET request"
									},
									"typeParameter": [
										{
											"id": 346,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 347,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "options\n"
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 272,
														"name": "default"
													},
													{
														"type": "literal",
														"value": "body"
													}
												],
												"name": "Omit"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 284,
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "default"
											}
										],
										"name": "Promise"
									},
									"implementationOf": {
										"type": "reference",
										"id": 253,
										"name": "RequestBuilder.get"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 252,
								"name": "RequestBuilder.get"
							}
						},
						{
							"id": 323,
							"name": "getHeaders",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "src/rest/RESTRequestBuilder.ts",
									"line": 35,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 324,
									"name": "getHeaders",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get headers"
									},
									"parameters": [
										{
											"id": 325,
											"name": "headers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record"
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 326,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 328,
													"name": "Authorization",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "..."
												},
												{
													"id": 329,
													"name": "Content-Type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'application/json'"
												},
												{
													"id": 327,
													"name": "User-Agent",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														328,
														329,
														327
													]
												}
											]
										}
									}
								}
							]
						},
						{
							"id": 352,
							"name": "patch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/rest/RESTRequestBuilder.ts",
									"line": 138,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 353,
									"name": "patch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create PATCH request"
									},
									"typeParameter": [
										{
											"id": 354,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 355,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "options\n"
											},
											"type": {
												"type": "reference",
												"id": 272,
												"name": "default"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 284,
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "default"
											}
										],
										"name": "Promise"
									},
									"implementationOf": {
										"type": "reference",
										"id": 269,
										"name": "RequestBuilder.patch"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 268,
								"name": "RequestBuilder.patch"
							}
						},
						{
							"id": 348,
							"name": "post",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/rest/RESTRequestBuilder.ts",
									"line": 130,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 349,
									"name": "post",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create POST request"
									},
									"typeParameter": [
										{
											"id": 350,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 351,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "options\n"
											},
											"type": {
												"type": "reference",
												"id": 272,
												"name": "default"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 284,
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "default"
											}
										],
										"name": "Promise"
									},
									"implementationOf": {
										"type": "reference",
										"id": 257,
										"name": "RequestBuilder.post"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 256,
								"name": "RequestBuilder.post"
							}
						},
						{
							"id": 356,
							"name": "put",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/rest/RESTRequestBuilder.ts",
									"line": 146,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 357,
									"name": "put",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create PUT request"
									},
									"typeParameter": [
										{
											"id": 358,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 359,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "options\n"
											},
											"type": {
												"type": "reference",
												"id": 272,
												"name": "default"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 284,
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "default"
											}
										],
										"name": "Promise"
									},
									"implementationOf": {
										"type": "reference",
										"id": 265,
										"name": "RequestBuilder.put"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 264,
								"name": "RequestBuilder.put"
							}
						},
						{
							"id": 330,
							"name": "query",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/rest/RESTRequestBuilder.ts",
									"line": 49,
									"character": 7
								}
							],
							"signatures": [
								{
									"id": 331,
									"name": "query",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add query data"
									},
									"parameters": [
										{
											"id": 332,
											"name": "k",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "key"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 333,
											"name": "v",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "value\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 244,
										"name": "default"
									},
									"implementationOf": {
										"type": "reference",
										"id": 249,
										"name": "RequestBuilder.query"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 248,
								"name": "RequestBuilder.query"
							}
						},
						{
							"id": 339,
							"name": "request",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/rest/RESTRequestBuilder.ts",
									"line": 77,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 340,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create a request"
									},
									"typeParameter": [
										{
											"id": 341,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 342,
											"name": "method",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "method to be used"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "GET"
													},
													{
														"type": "literal",
														"value": "POST"
													},
													{
														"type": "literal",
														"value": "PUT"
													},
													{
														"type": "literal",
														"value": "PATCH"
													},
													{
														"type": "literal",
														"value": "DELETE"
													}
												]
											}
										},
										{
											"id": 343,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "options\n"
											},
											"type": {
												"type": "reference",
												"id": 272,
												"name": "default"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 284,
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "default"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 334,
							"name": "url",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/rest/RESTRequestBuilder.ts",
									"line": 58,
									"character": 5
								}
							],
							"signatures": [
								{
									"id": 335,
									"name": "url",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add part(s) to the URI"
									},
									"parameters": [
										{
											"id": 336,
											"name": "paths",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"comment": {
												"text": "paths\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 244,
										"name": "default"
									},
									"implementationOf": {
										"type": "reference",
										"id": 246,
										"name": "RequestBuilder.url"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 245,
								"name": "RequestBuilder.url"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								314
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								322,
								319,
								320,
								318,
								321
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								337
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								360,
								344,
								323,
								352,
								348,
								356,
								330,
								339,
								334
							]
						}
					],
					"sources": [
						{
							"fileName": "src/rest/RESTRequestBuilder.ts",
							"line": 10,
							"character": 39
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 244,
							"name": "RequestBuilder"
						}
					]
				},
				{
					"id": 299,
					"name": "RESTOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Options for rest"
					},
					"children": [
						{
							"id": 302,
							"name": "maxRetries",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Times, REST will try to perform the request with 5xx error code"
							},
							"sources": [
								{
									"fileName": "src/rest/RESTOptions.ts",
									"line": 11,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 301,
							"name": "useragent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "UserAgent to use\nShouldn't be used, since Discord requires it to contain library name and it's version"
							},
							"sources": [
								{
									"fileName": "src/rest/RESTOptions.ts",
									"line": 9,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 300,
							"name": "v",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "API version to use"
							},
							"sources": [
								{
									"fileName": "src/rest/RESTOptions.ts",
									"line": 4,
									"character": 3
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								302,
								301,
								300
							]
						}
					],
					"sources": [
						{
							"fileName": "src/rest/RESTOptions.ts",
							"line": 2,
							"character": 36
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						289,
						303,
						313
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						299
					]
				}
			],
			"sources": [
				{
					"fileName": "src/rest/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 42,
			"name": "util",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 43,
					"name": "default",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 44,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 45,
									"name": "idToDate",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 46,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 47,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Convert snowflake to date"
													},
													"parameters": [
														{
															"id": 48,
															"name": "id",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "Date"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										45
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						43
					]
				}
			],
			"sources": [
				{
					"fileName": "src/util/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 50,
			"name": "wrapper",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 364,
					"name": "ClientBuilder",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 365,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 366,
									"name": "new ClientBuilder",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 367,
											"name": "Stack",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 210,
												"name": "default"
											},
											"default": {
												"type": "reference",
												"id": 210,
												"name": "default"
											}
										}
									],
									"parameters": [
										{
											"id": 368,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 369,
											"name": "root",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 391,
												"name": "default"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 364,
										"typeArguments": [
											{
												"type": "reference",
												"name": "Stack"
											}
										],
										"name": "default"
									}
								}
							]
						},
						{
							"id": 370,
							"name": "client",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/wrapper/ClientBuilder.ts",
									"line": 7,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 144,
								"typeArguments": [
									{
										"type": "reference",
										"name": "Stack"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 383,
							"name": "build",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/wrapper/ClientBuilder.ts",
									"line": 26,
									"character": 7
								}
							],
							"signatures": [
								{
									"id": 384,
									"name": "build",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 144,
										"typeArguments": [
											{
												"type": "reference",
												"name": "Stack"
											}
										],
										"name": "default"
									}
								}
							]
						},
						{
							"id": 377,
							"name": "cache",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/wrapper/ClientBuilder.ts",
									"line": 21,
									"character": 7
								}
							],
							"signatures": [
								{
									"id": 378,
									"name": "cache",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 379,
											"name": "provider",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 380,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 381,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 382,
																	"name": "client",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"id": 144,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 210,
																				"name": "default"
																			}
																		],
																		"name": "default"
																	}
																}
															],
															"type": {
																"type": "reference",
																"id": 121,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 126,
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			},
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		],
																		"name": "default"
																	}
																],
																"name": "CacheProvider"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 364,
										"typeArguments": [
											{
												"type": "reference",
												"name": "Stack"
											}
										],
										"name": "default"
									}
								}
							]
						},
						{
							"id": 371,
							"name": "rest",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/wrapper/ClientBuilder.ts",
									"line": 16,
									"character": 6
								}
							],
							"signatures": [
								{
									"id": 372,
									"name": "rest",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 373,
											"name": "provider",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 374,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 375,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 376,
																	"name": "client",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"id": 144,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 210,
																				"name": "default"
																			}
																		],
																		"name": "default"
																	}
																}
															],
															"type": {
																"type": "reference",
																"id": 275,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 244,
																		"name": "default"
																	}
																],
																"name": "RESTProvider"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 364,
										"typeArguments": [
											{
												"type": "reference",
												"name": "Stack"
											}
										],
										"name": "default"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								365
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								370
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								383,
								377,
								371
							]
						}
					],
					"sources": [
						{
							"fileName": "src/wrapper/ClientBuilder.ts",
							"line": 6,
							"character": 34
						}
					],
					"typeParameter": [
						{
							"id": 385,
							"name": "Stack",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 210,
								"name": "DefaultClientStack"
							},
							"default": {
								"type": "reference",
								"id": 210,
								"name": "DefaultClientStack"
							}
						}
					]
				},
				{
					"id": 391,
					"name": "ModuleHostModule",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Module which is capable of loading other modules"
					},
					"children": [
						{
							"id": 392,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 393,
									"name": "new ModuleHostModule",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 394,
											"name": "modules",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "modules to load\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 215,
													"name": "default"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 391,
										"name": "default"
									}
								}
							]
						},
						{
							"id": 395,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Unique id for this module"
							},
							"sources": [
								{
									"fileName": "src/wrapper/ModuleHostModule.ts",
									"line": 5,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "symbol"
									}
								]
							},
							"defaultValue": "'host-module'",
							"implementationOf": {
								"type": "reference",
								"id": 224,
								"name": "Module.id"
							}
						},
						{
							"id": 396,
							"name": "initialized",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Whether the module was initialized"
							},
							"sources": [
								{
									"fileName": "src/wrapper/ModuleHostModule.ts",
									"line": 6,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false",
							"implementationOf": {
								"type": "reference",
								"id": 216,
								"name": "Module.initialized"
							}
						},
						{
							"id": 397,
							"name": "modules",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Modules which will be loaded by this module"
							},
							"sources": [
								{
									"fileName": "src/wrapper/ModuleHostModule.ts",
									"line": 9,
									"character": 9
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 215,
									"name": "default"
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 398,
							"name": "init",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"comment": {
								"shortText": "Function, which will be emitted once module was initialized on client's startup"
							},
							"sources": [
								{
									"fileName": "src/wrapper/ModuleHostModule.ts",
									"line": 18,
									"character": 6
								}
							],
							"signatures": [
								{
									"id": 399,
									"name": "init",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Function, which will be emitted once module was initialized on client's startup"
									},
									"parameters": [
										{
											"id": 400,
											"name": "client",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 144,
												"typeArguments": [
													{
														"type": "reference",
														"id": 210,
														"name": "default"
													}
												],
												"name": "default"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"name": "Module.init"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 217,
								"name": "Module.init"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								392
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								395,
								396,
								397
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								398
							]
						}
					],
					"sources": [
						{
							"fileName": "src/wrapper/ModuleHostModule.ts",
							"line": 4,
							"character": 37
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 215,
							"name": "Module"
						}
					]
				},
				{
					"id": 386,
					"name": "createBot",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "src/wrapper/createBot.ts",
							"line": 5,
							"character": 33
						}
					],
					"signatures": [
						{
							"id": 387,
							"name": "createBot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 388,
									"name": "Stack",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 210,
										"name": "default"
									},
									"default": {
										"type": "reference",
										"id": 210,
										"name": "default"
									}
								}
							],
							"parameters": [
								{
									"id": 389,
									"name": "token",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 390,
									"name": "root",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 391,
										"name": "ModuleHostModule"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 364,
								"typeArguments": [
									{
										"type": "reference",
										"name": "Stack"
									}
								],
								"name": "default"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						364,
						391
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						386
					]
				}
			],
			"sources": [
				{
					"fileName": "src/wrapper/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 49,
			"name": "ws",
			"kind": 1,
			"kindString": "Module",
			"flags": {}
		}
	],
	"groups": [
		{
			"title": "Modules",
			"kind": 1,
			"children": [
				1,
				2,
				39,
				40,
				41,
				42,
				50,
				49
			]
		}
	]
}